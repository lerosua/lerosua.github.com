<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | 阳光烂灿的日子]]></title>
  <link href="http://lerosua.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://lerosua.github.io/"/>
  <updated>2016-12-04T21:45:00+08:00</updated>
  <id>http://lerosua.github.io/</id>
  <author>
    <name><![CDATA[lerosua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搞定注册苹果开发者账号]]></title>
    <link href="http://lerosua.github.io/blog/2013/12/19/%E6%90%9E%E5%AE%9A%E6%B3%A8%E5%86%8C%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7/"/>
    <updated>2013-12-19T00:00:00+08:00</updated>
    <id>http://lerosua.github.io/blog/2013/12/19/搞定注册苹果开发者账号</id>
    <content type="html"><![CDATA[<p>终于有需要自己申请苹果开发者账号了。如今的申请流程已经很方便了，不需要什么传真什么的。但挡在我前面的还有一道坎，就是境外支付的信用卡。于是立即去申请带visa的信用卡，结果要一个月时间，有点来不及啊。于是借用朋友的高级信用卡『运通』来救急。</p>




<p>打开 https://developer.apple.com/programs/ios/ 网站，点击Enroll now吧。</p>




<p>过程省略一万字...</p>




<p>好吧，都是写一些个人信息什么的，网上也有流程嘛。by the way，申请的是个人开发者账号，没公司章啊。</p>




<p>一切搞定之后基本上两个工作日之后会有结果。</p>




<p>第一次我填错了信用卡信息... 担误了两天。</p>




<p>第二次收到邮件提示激活，结果显示</p>




<p>『We have received your purchase information and will email you shortly to verify additional details』</p>




<p>上网搜索了一下发现挺多人有这个问题的。最优化的解决方案是给客服打电话。</p>




<p>『4006 701 855』，接通后是个客服妹子。基本上会引导你一步一步解决问题的操作，而我的问题竟然apple id的姓名不对应，不知道为啥，那里要写我真实姓名拼音。大致因为有地方不一致造成的原因吧。反正遇到问题打电话给客服就对了，反正我们已经交了钱的嘛。</p>




<p>好了，下面可以开始搞证书之类了，我最最讨厌就是这些步骤了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发中关于内存的一点小结]]></title>
    <link href="http://lerosua.github.io/blog/2012/02/24/ios-memory-dev/"/>
    <updated>2012-02-24T00:00:00+08:00</updated>
    <id>http://lerosua.github.io/blog/2012/02/24/ios-memory-dev</id>
    <content type="html"><![CDATA[<p>过去两周处于一种迷惘，失落，绝望，焦虑的状态中，事由是这样的，过年回来确定要发一新版本app，修改完bug及添加部分新功能之后，准备发布了，结果测试发现运行一段时间后执行某个特定操作会崩溃。也只有在iphone 3gs上会出现，好嘛，于是立马修改这个bug，折腾后发现是内存泄露的问题。先是用xcode的Analyze查了下基本的错误，</p>




<p>然后又用instruments的leak工具查了又查，确定没有出现小红条了，可还是存在内存泄露。由于是接手的项目，之前的代码不是我写的。在想是不是自己修改的代码引出的问题，于是用svn diff一遍遍地逐行查看变更的代码。这其中花费了不少时间，而又找不着问题的状态非常令人沮丧。最后又一个版本一个版本地checkout出来，看看有没有同样的问题。结果发现同样存在着内存泄露的问题。就这样连续一周没有进度的情况，好几次，我都想劝，别理3gs了，都几年前要淘汰的机器了，那种状态，真是期望明天就是世界末日，于是不用再想这个bug的问题的绝望。又是一周的开始，发布也已经拖了一周了，想想无头绪的情况下，还是清空自己的脑袋，从头来过，于是重新审视代码。终于在某类一处delegate的属性里看到了retain，一般情况下设置的delegate是不需要retain的，因为这样容易引起循环retain，从而造成对象无法被dealloc掉。然后在各个怀疑有问题有类的dealloc方法出用NSlog输出标记查看，果然，好几个view在返回后都没有调用过dealloc，果然是有内存泄露问题，而这类逻辑上的内存泄露也的确是无法用leak工具查出来。于是情况逐渐明朗，对着代码改，终有所成效。</p>




<p>总结一下找内存问题的思路以备后用。
<ul>
    <li>1.第一步当然是 Xcode的 Analyze工具，查最基本的泄露问题，类的属性retain要与dealloc的release对上号。一般漏写忘了写此工具都能标识出来。</li>
    <li>2.运行Instrement工具里的Leak,Allocations模块，通过实时操作监控程序内存状态，如有内存泄露，Leak模块里会有小红条出现。以此可定位到相关代码。</li>
    <li>3.警惕循环retain，熟读Advanced Memoy management Programming Guide,只有28页，不深的英文。</li>
    <li>4.遇到问题上google,stackoverflow.com基本上都会有相关思路。</li>
    <li>5.善用内存警告，DidReceiveMemoryWarning时释放资源吧</li>
</ul>
&nbsp;</p>




<p>关于崩溃:
<ul>
    <li>1.要有模拟器,设置NSZombieEnabled什么的，遇到EXC_BAD_ACCESS错误，立马就可用 malloc_history 来查看了.</li>
    <li>2.要有真机，在真机上查看console,在xcode上点击Organizer-&gt;Devices里，还有Device logs，那里有崩溃日志.</li>
    <li>3.要有耐心，you knows.</li>
</ul></p>

]]></content>
  </entry>
  
</feed>
